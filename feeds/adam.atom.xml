<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The·Grid</title><link href="http://www.thegrid.fish/" rel="alternate"></link><link href="http://www.thegrid.fish/feeds/adam.atom.xml" rel="self"></link><id>http://www.thegrid.fish/</id><updated>2014-07-13T00:00:00+01:00</updated><entry><title>Testing Intensifies</title><link href="http://www.thegrid.fish/2014/07/13/testing-intensifies" rel="alternate"></link><updated>2014-07-13T00:00:00+01:00</updated><author><name>Adam</name></author><id>tag:www.thegrid.fish,2014-07-13:2014/07/13/testing-intensifies</id><summary type="html">&lt;p&gt;Another busy day. Further software refinements led to a Tkinter-based sink to
make visualisation&amp;nbsp;easier:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tkinter GUI" src="/images/tkinter.png" /&gt;&lt;/p&gt;
&lt;p&gt;I also stuck together a simple sink using pylibftdi in bitbang mode, which was
even easier than I expected. It generates the &lt;span class="caps"&gt;DATA&lt;/span&gt;, &lt;span class="caps"&gt;SRCK&lt;/span&gt; and &lt;span class="caps"&gt;RCK&lt;/span&gt; signals for
the shift registers using three pins on the &lt;span class="caps"&gt;FTDI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Meanwhile David was busy finishing up the &lt;span class="caps"&gt;PCB&lt;/span&gt; design (more on that later).
Afterwards he stuck together the prototype electronics on a breadboard,
connected up the relays and two (of the eventual 49) &lt;span class="caps"&gt;LED&lt;/span&gt; strips and we tried
hooking it all up for the first&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;&lt;img alt="First Full Test" src="/images/first_full_test.jpg" /&gt;
&lt;img alt="Full Test Unrolled" src="/images/full_test_unrolled.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;It all worked! Additionally the relays sounded great on one of the aluminium
poles. This is a very positive result and we&amp;#8217;re now confident that the
electronics design, software design, and various other choices that led to this
moment were at least on the right track.  All that&amp;#8217;s left is the actual PCBs,
the hard parts of the software (person tracking!) and a million other
tasks-to-do before &lt;span class="caps"&gt;EMF&lt;/span&gt;.&lt;/p&gt;</summary><category term="electronics"></category><category term="software"></category></entry><entry><title>Control Software</title><link href="http://www.thegrid.fish/2014/07/12/control-software" rel="alternate"></link><updated>2014-07-12T00:00:00+01:00</updated><author><name>Adam</name></author><id>tag:www.thegrid.fish,2014-07-12:2014/07/12/control-software</id><summary type="html">&lt;p&gt;Last night we started fleshing out the design for the control software. The
bulk of it will be written in Python, because we&amp;#8217;re both familiar with the
language and it has good bindings to libFTDI and&amp;nbsp;OpenCV.&lt;/p&gt;
&lt;p&gt;First I sketched out an outline of the overall&amp;nbsp;design:&lt;/p&gt;
&lt;p&gt;&lt;img alt="paper planning" src="/images/software_plan.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;We have a central &amp;#8216;Control&amp;#8217; object which is responsible for tying everything
together, and externally we&amp;#8217;ll use &lt;a href="http://supervisord.org/"&gt;supervisord&lt;/a&gt; to
start and manage it. It starts an &lt;span class="caps"&gt;API&lt;/span&gt; and Tracking process via multiprocessing,
and loads up all the Patterns and Sinks it knows about and waits for&amp;nbsp;instructions.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;HTTP&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; is in a separate process and uses the wonderful
&lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; library, with a Queue to pass commands back to
the Control process. The &lt;span class="caps"&gt;API&lt;/span&gt; receives (command, value) pairs from &lt;span class="caps"&gt;HTTP&lt;/span&gt; &lt;span class="caps"&gt;POST&lt;/span&gt;
requests, checks the authentication against the settings, then sends the
command on. Later we&amp;#8217;ll probably extend this to also return data about the
current state of the system, for example which Patterns are&amp;nbsp;available.&lt;/p&gt;
&lt;p&gt;The Tracking process will use &lt;a href="http://opencv.org/"&gt;OpenCV&lt;/a&gt; to detect people in
the grid, estimate the position of their feet in the 2d (top-down) grid via
projective transforms, assign each person a unique number and keep track of
them for as long as they remain in the grid. This is probably going to be one
of the more challenging components to write! It passes this data back to the
Control process and the Patterns via a proxied dict through a multiprocessing
Manager&amp;nbsp;object.&lt;/p&gt;
&lt;p&gt;Patterns and Sinks are similar. Both have their own package for all the pattern
or sink files, a top level class to inherit from, and register themselves with
the system using a decorator. For Patterns, the decorator also allows a
configuration to be registered, so that for example the maze pattern can offer
one- or two-player patterns. Patterns will have an update() method called
which returns a full grid state frame (a 7x7 boolean array) and a time to
display the frame for. Sinks have update(state) called with the state from a
pattern, and somehow output that pattern, for example to the real hardware on
the&amp;nbsp;grid.&lt;/p&gt;
&lt;p&gt;&lt;img alt="source code screenshot" src="/images/code_screenshot.png" /&gt;&lt;/p&gt;
&lt;p&gt;Then I got coding. In a few hours and 230 lines of Python we now have a
complete working barebones system, with Control implemented, a simple &lt;span class="caps"&gt;API&lt;/span&gt; that
can load patterns and sinks, the pattern and sink registration and loading
system, settings management, logging and a few other bits. Tracking is still an
empty shell at the moment, and we&amp;#8217;ll be working on the Console sink before the
real hardware one (useful for debugging). Patterns are going to come later too,
but at least they have something to slot into now. Eventually we&amp;#8217;ll be adding
an Android app to the mix which uses the &lt;span class="caps"&gt;API&lt;/span&gt; for remote control, but that is
pretty far down the to-do&amp;nbsp;list!&lt;/p&gt;</summary><category term="software"></category></entry><entry><title>Aluminium Arrived (at last)</title><link href="http://www.thegrid.fish/2014/07/09/aluminium-arrived-at-last" rel="alternate"></link><updated>2014-07-09T00:00:00+01:00</updated><author><name>Adam</name></author><id>tag:www.thegrid.fish,2014-07-09:2014/07/09/aluminium-arrived-at-last</id><summary type="html">&lt;p&gt;After some more wrangling with the online vehicle tracking, we eventually had a
firm &lt;span class="caps"&gt;ETA&lt;/span&gt;&amp;#8230; in the past. It slipped slowly further back in time until the
estimated delivery was an hour&amp;nbsp;ago.&lt;/p&gt;
&lt;p&gt;&lt;img alt="delivery tracking..." src="/images/eta_the_past.png" /&gt;&lt;/p&gt;
&lt;p&gt;Luckily the aluminium did eventually make it to the present time and we happily
took&amp;nbsp;delivery.&lt;/p&gt;
&lt;p&gt;&lt;img alt="aluminium in the garden" src="/images/alu_in_garden.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;A few hours of hard sawing, filing and taping up later, and we now have eight
bundles of aluminium angle, all ready to be used for the structural component
of&amp;nbsp;TheGrid.&lt;/p&gt;
&lt;p&gt;&lt;img alt="adam sawing" src="/images/adam_sawing.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;We also opened up one of the power supplies to investigate the design and
quality. True to the &amp;#8220;Professional&amp;#8221; sticker on the box, the insides included a
large toroid that had torn free of its soldering, so we&amp;#8217;ll probably need to do
a little rework before these are&amp;nbsp;shipshape.&lt;/p&gt;
&lt;p&gt;&lt;img alt="i'm sure this PSU is just fine" src="/images/psu_dodgy_transformer.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;The rest of the prototype electronics have also arrived, so we&amp;#8217;re ready to
start testing the control electronics. Hopefully the first LEDs (to verify
colour choice) will be arriving tomorrow so we can light something&amp;nbsp;up!&lt;/p&gt;</summary><category term="structures"></category><category term="power"></category></entry><entry><title>PSUs arrived (aluminium didn’t)</title><link href="http://www.thegrid.fish/2014/07/08/psus-arrived-aluminium-didnt" rel="alternate"></link><updated>2014-07-08T00:00:00+01:00</updated><author><name>Adam</name></author><id>tag:www.thegrid.fish,2014-07-08:2014/07/08/psus-arrived-aluminium-didnt</id><summary type="html">&lt;p&gt;Five of the most legitimate 30A 12V PSUs you can find on eBay arrived today:
&lt;img alt="PSUs arrived" src="/images/psus_arrived.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately the aluminium couldn&amp;#8217;t be delivered today so fingers crossed
we&amp;#8217;ll get it&amp;nbsp;tomorrow.&lt;/p&gt;</summary><category term="power"></category></entry><entry><title>175m Aluminium Angle on its way…</title><link href="http://www.thegrid.fish/2014/07/06/175m-aluminium-angle-on-its-way" rel="alternate"></link><updated>2014-07-06T00:00:00+01:00</updated><author><name>Adam</name></author><id>tag:www.thegrid.fish,2014-07-06:2014/07/06/175m-aluminium-angle-on-its-way</id><summary type="html">&lt;p&gt;This is all feeling much more real now as we&amp;#8217;ve just placed the order for 35 5m
lengths of aluminium equal angle. It should arrive Tuesday, apparently! I can
only imagine how confused the delivery driver will be when the address is a
residental&amp;nbsp;house.&lt;/p&gt;
&lt;p&gt;&lt;img alt="the order" src="/images/alu_order.png" /&gt;&lt;/p&gt;
&lt;p&gt;We&amp;#8217;ve now also finished the prototype design for the control electronics and
ordered a few samples to test drive. Hopefully we&amp;#8217;ll have flashing LEDs by the
end of the&amp;nbsp;week.&lt;/p&gt;</summary><category term="structures"></category><category term="electronics"></category></entry></feed>